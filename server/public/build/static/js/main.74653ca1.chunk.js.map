{"version":3,"sources":["App/AddRecipe.jsx","App/AllRecipes.jsx","App/RecipeBook.jsx","App/App.js","reportWebVitals.js","index.js"],"names":["require","config","AddRecipe","onChangeIngredientHandler","index","eventObject","newIngredients","state","ingredients","map","ingredient","ingredentIndex","target","name","value","setState","minusIngredientHandler","filter","element","elementIndex","onChangeHandler","bind","addIngredientHandler","onSubmit","title","amount","unit","directions","e","this","concat","preventDefault","allIngredients","newRecipe","axios","post","process","then","res","console","log","data","catch","error","className","type","onChange","onClick","Component","AllRecipes","props","allRecipes","a","get","response","listRecipes","recipe","to","pathname","key","RecipeBook","path","component","App","src","alt","exact","Home","NotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74653ca1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nrequire('dotenv').config();\r\nconst addRecipe = process.env.REACT_APP_ADDRECIPE;\r\n\r\n\r\n\r\nclass AddRecipe extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.onChangeIngredientHandler = this.onChangeIngredientHandler.bind(this); \r\n    this.addIngredientHandler = this.addIngredientHandler.bind(this);\r\n    this.minusIngredientHandler = this.minusIngredientHandler.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = { \r\n      title: '',\r\n      ingredients: [{ \r\n        amount: '', \r\n        unit: '',\r\n        ingredient: ''\r\n      }],\r\n      directions: ''\r\n    };\r\n  }\r\n\r\n\r\n\r\n  onChangeHandler(e){\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n\r\n  \r\n  onChangeIngredientHandler = index => eventObject =>{\r\n    const newIngredients = this.state.ingredients.map((ingredient, ingredentIndex) => {\r\n      if (index !== ingredentIndex) return ingredient;\r\n      return {...ingredient, [eventObject.target.name]: eventObject.target.value}\r\n    });\r\n\r\n    this.setState({\r\n      ingredients: newIngredients\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  addIngredientHandler(){\r\n    this.setState({\r\n      ingredients: this.state.ingredients.concat([{ \r\n        amount: '', \r\n        unit: '',\r\n        ingredient: ''\r\n      }])\r\n    })\r\n  }\r\n\r\n  minusIngredientHandler = index => () => {\r\n    this.setState({\r\n      ingredients: this.state.ingredients.filter( \r\n        (element, elementIndex)=> index !== elementIndex || index === 0)\r\n    });\r\n  }\r\n\r\n\r\n  //on submit, form adds inputs to state and sends state to server endpoint with post\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n   \r\n\r\n    //concatenates each ingredent then concatenates amount, unit, and ingredient name to send to server as one\r\n    const allIngredients = this.state.ingredients.map((ingredient) => {\r\n      return ( `\r\n        ${ingredient.amount}${ingredient.unit} \r\n        \\u00A0\\u00A0 - \\u00A0\\u00A0 \r\n        ${ingredient.ingredient}  \r\n      `);    \r\n    });\r\n      \r\n\r\n    //prepares state to send to server and send with a post request\r\n    const newRecipe = {\r\n      title: this.state.title,\r\n      ingredients: allIngredients, //change later to be an array of ingrediants\r\n      directions: this.state.directions\r\n    };\r\n    \r\n    axios.post(addRecipe, newRecipe)\r\n        .then(res => {console.log(res.data);})\r\n        .catch(function (error){\r\n            console.log(error);\r\n        })\r\n            \r\n    \r\n\r\n    //resets state\r\n    this.setState({\r\n      title: '',\r\n      ingredients: [{ \r\n        amount: '', \r\n        unit: '',\r\n        ingredient: ''\r\n      }], \r\n      directions: ''\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='book'>\r\n        <h3>Add a recipe</h3>\r\n        <form onSubmit={this.onSubmit}>  \r\n          <label>Title: </label>\r\n            <input\r\n              className='recipeTitle'\r\n              type='text'\r\n              name='title'\r\n              value={this.state.title}\r\n              onChange={this.onChangeHandler}\r\n            />\r\n\r\n          <label>Ingredients: </label>\r\n            {this.state.ingredients.map((ingredient, index) => (\r\n                <span key={ingredient.index}>\r\n                  <input\r\n                    className='amount'\r\n                    type='text'\r\n                    name='amount'\r\n                    value={ingredient.amount}\r\n                    onChange={this.onChangeIngredientHandler(index)}\r\n                  /> \r\n                  <select \r\n                    className='amount' \r\n                    name='unit'\r\n                    value={ingredient.unit} \r\n                    onChange={this.onChangeIngredientHandler(index)}\r\n                  >            \r\n                      <option value=''></option>\r\n                      <option value='kg'>kg</option>\r\n                      <option value='g'>g</option>\r\n                      <option value='lbs'>lbs</option>\r\n                      <option value='oz'>oz</option>\r\n                      <option value='L'>l</option>\r\n                      <option value='ml'>ml</option>\r\n                      <option value='fl oz'>fl oz</option>\r\n                      <option value='cups'>cups</option>\r\n                      <option value='tbsp'>tbs</option>\r\n                      <option value='tsp'>tsp</option>\r\n                  </select>\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <input\r\n                    className='ingredient'\r\n                    type='text'\r\n                    name='ingredient'\r\n                    value={ingredient.ingredient}\r\n                    onChange={this.onChangeIngredientHandler(index)}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"addSubtractButtons\"\r\n                    onClick={this.addIngredientHandler}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"addSubtractButtons\"\r\n                    onClick={this.minusIngredientHandler(index)}\r\n                  >\r\n                    -\r\n                  </button>\r\n                </span>\r\n            ))}\r\n   \r\n          <label>Directions: </label>\r\n            <textarea\r\n              className='directions'\r\n              type='text'\r\n              name='directions'\r\n              value={this.state.directions}\r\n              onChange={this.onChangeHandler}\r\n            />\r\n          <button className='submit'>Add recipe</button>\r\n        </form>\r\n      </div>        \r\n    )\r\n  }\r\n}\r\n\r\nexport default AddRecipe;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nrequire('dotenv').config();\r\nconst getAllRecipes = process.env.REACT_APP_GETALLRECIPES;\r\n\r\n\r\nclass AllRecipes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { \r\n      allRecipes: []\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //gets a list of all recipes from server\r\n  async componentDidMount() {\r\n    await axios.get(getAllRecipes)\r\n        .then(response => {\r\n            this.setState({allRecipes: response.data.data});\r\n        })\r\n        .catch(function (error){\r\n            console.log(error);\r\n        })\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  render() {\r\n    //gets allRecipes state once loaded from server to be displayed\r\n    const listRecipes=this.state.allRecipes.map((recipe)=>\r\n      <table>\r\n        <tbody>\r\n          <tr className='list' key={recipe.key}>\r\n            <Link \r\n              className='recipeTitleDisplay'\r\n              to={{\r\n                pathname:`/recipe_book/recipes/${recipe.title}`, //how to actually render each page dynamicly though node render? then make a react  page to rout to though node, map app.get\r\n                state:{\r\n                  title: recipe.title,\r\n                  ingredients: recipe.ingredients,\r\n                  directions: recipe.directions\r\n                }\r\n              }}>\r\n                <td>{recipe.title}</td>\r\n            </Link>\r\n            <td>Ingredients:</td>\r\n            {recipe.ingredients.map((ingredient, index) => <td>{ingredient}</td>)}\r\n            &nbsp;\r\n            <td>Directions:</td>\r\n            <td className='listDirections'>{recipe.directions}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n\r\n\r\n    return (\r\n      <div className='book'>\r\n        <div>\r\n          <h3>Recipes</h3>\r\n          {listRecipes}     \r\n        </div>\r\n      </div>        \r\n    )\r\n  }\r\n}\r\n\r\nexport default AllRecipes;","import React,{Component} from 'react';\r\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\r\nimport AddRecipe from './AddRecipe.jsx';\r\nimport AllRecipes from './AllRecipes.jsx';\r\nimport './css/RecipeBook.css';\r\n\r\n\r\nclass RecipeBook extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <div className='recipeBookNav'>\r\n     \r\n        <BrowserRouter>\r\n        \r\n            <nav>   \r\n              <Link className='bookOptions' to='/Recipe_app/recipe_book/Add_Recipe'>\r\n                Add a Recipe\r\n              </Link>\r\n              <Link className='bookOptions' to='/Recipe_app/recipe_book/recipes'>\r\n                All Recipes\r\n              </Link>\r\n              {/* grocery list: takes ingrediants from recipes and adds them to a list able to +/- to list */}\r\n              {/* search and sort recipe list */}\r\n              {/* catagories /manage catagories include user added catagories*/}\r\n            </nav>\r\n\r\n            <Switch>\r\n              <Route path='/Recipe_app/recipe_book/Add_Recipe' component={AddRecipe} />\r\n              <Route path='/Recipe_app/recipe_book/recipes' component={AllRecipes} />\r\n            </Switch>\r\n         \r\n        </BrowserRouter>\r\n\r\n      </div>        \r\n    )\r\n  }\r\n}\r\n\r\nexport default RecipeBook;\r\n\r\n","import React,{Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport RecipeBook from './RecipeBook.jsx';\nimport './css/App.css';\n\n\n\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div className='mainPage'>\n     \n        <header>\n          A Cook's tale  in recipes and other nonsense\n        </header>\n\n        <BrowserRouter>\n          <div className='backdrop'>\n            <p className='title'>Menu</p>\n            \n            <nav className='mainNav'>      \n              <Link className='card recipe' to='/Recipe_app/recipe_book'>\n                <p className='cardTitle'>My Recipe book</p>\n              </Link>\n              <Link className='card bigOven' to='/bigoven'>\n                <img \n                  className='bigOvenImg' \n                  src='https://mda.bigoven.com/images/logos/BigOven_logo_rgb150x40.png' \n                  alt='BigOven logo'\n                />\n                <p className='cardTitle'>Recipes from Big oven</p>\n              </Link>\n              <Link className='card conversion' to='/products'>\n                <p className='cardTitle'>Measurement Conversions</p>\n              </Link>\n              <Link className='card timer' to='/user'>\n                <p className='cardTitle'>Kitchen Timer</p>\n              </Link>\n            </nav>\n\n            <Switch>\n              <Route path='/Recipe_app/recipe_book' component={RecipeBook} />\n              <Route exact path='/' component={Home} />\n              <Route path='/*' component={NotFound} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n\n        <footer>\n          <ul>\n            <li>Copyright &copy; Michael R. Kline 2020. All Rights Reserved. </li>\n          </ul>\n        </footer>\n          \n        <div className='rotate'>Please rotate Device</div>\n      </div>        \n    )\n  }\n}\n\nexport default App;\n\n\n\n\n\nclass Home extends Component {\n  render(){\n    return(\n      <div>\n        \n      </div>\n    );\n  }\n}\n\nclass NotFound extends Component {\n  render(){\n    return(\n      <div>\n       404 Not Found\n      </div>\n    );\n  }\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}